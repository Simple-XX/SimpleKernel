
# This file is a part of MRNIU/SimpleKernel (https://github.com/MRNIU/SimpleKernel).
#
# Makefile.env for MRNIU/SimpleKernel.

# 设置 make 环境
TARGET = x86_64-elf
# ARCH = x86_64
ARCH = i386
MAKE = make
CC = $(TARGET)-gcc
CXX = $(TARGET)-g++
LD = $(TARGET)-ld
AS = $(TARGET)-as
AR = $(TARGET)-ar
OBJCPY = $(TARGET)-objcopy
STRIP = $(TARGET)-strip
NM = $(TARGET)-gcc-nm
READELF = $(TARGET)-readelf
IMAGE_KERNEL = kernel.bin
IMAGE_BOOT = bootloader.bin
RES_KERNEL_MAP = kernel.map
RES_BOOT_MAP = bootloader.map
RES_KERNEL_NM = kernel.nm
RES_BOOT_NM = bootloader.nm

mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
ROOT_DIR := $(patsubst %/,%,$(dir $(mkfile_path)))
CURR_DIR := $(shell pwd)
ARCH_DIR := $(ROOT_DIR)/arch/x86_64
BOOT_DIR := $(ARCH_DIR)/boot
DRV_DIR := $(ROOT_DIR)/drv
KERNEL_DIR := $(ROOT_DIR)/kernel
LIBC_DIR := $(ROOT_DIR)/libc
INCLUDE_DIR := $(ROOT_DIR)/include
DATASTRUCTURE_DIR := $(ROOT_DIR)/ds_alg

exclude_dirs := include
dirs := $(shell find . -maxdepth 1 -type d)
dirs := $(basename $(patsubst ./%, %, $(dirs)))
dirs := $(filter-out $(exclude_dirs), $(dirs))
SUB_DIR := $(dirs)

CXXFLAGS = -std=c++11 -ffreestanding -nostdinc -nostdlib -fno-exceptions -fno-rtti  \
		   -fno-builtin -O2 -Wall -Wextra -Wshadow -Wunreachable-code -Winline  \
		   -Wsign-compare \
	       -g -ggdb -C -c \
		   -I$(LIBC_DIR) -I$(ARCH_DIR) -I$(DRV_DIR) -I$(KERNEL_DIR) -I$(BOOT_DIR) \
		   -I$(INCLUDE_DIR) -I$(DATASTRUCTURE_DIR) #-v

CFLAGS = -std=gnu11 -ffreestanding -nostdinc -nostdlib -fno-exceptions -nostartfiles  \
		 -fno-builtin -O2 -Wall -Wextra -Wshadow -Wunreachable-code -Winline  \
		 -Wmissing-prototypes -Wsign-compare \
		 -g -ggdb -C -c \
		 -I$(LIBC_DIR) -I$(ARCH_DIR) -I$(DRV_DIR) -I$(KERNEL_DIR) -I$(BOOT_DIR) \
		 -I$(INCLUDE_DIR) -I$(DATASTRUCTURE_DIR) #-v

ASFLAGS = -march=corei7

ifeq ($(ARCH),x86_64)
    CXXFLAGS += -mcmodel=large -mno-red-zone -mno-mmx -mno-sse -mno-sse2 -z max-page-size=0x1000 -lgcc
    CFLAGS += -mcmodel=large -mno-red-zone -mno-mmx -mno-sse -mno-sse2 -z max-page-size=0x1000 -lgcc
    ASFLAGS += --64
    LDFLAGS = -A x86_64 -m elf_x86_64 -T$(BOOT_DIR)/link64.ld
else
    CXXFLAGS += -m32
    CFLAGS += -m32
    ASFLAGS += --32
    LDFLAGS = -A i386 -m elf_i386 -T$(BOOT_DIR)/link32.ld
endif
