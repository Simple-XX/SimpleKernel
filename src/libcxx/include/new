
/**
 * @file new
 * @brief 内存分配
 * @author Zone.N (Zone.Niuzh@hotmail.com)
 * @version 1.0
 * @date 2023-03-31
 * @copyright MIT LICENSE
 * https://github.com/Simple-XX/SimpleKernel
 * @par change log:
 * <table>
 * <tr><th>Date<th>Author<th>Description
 * <tr><td>2023-03-31<td>Zone.N<td>迁移到 doxygen
 * </table>
 */

#ifndef SIMPLEKERNEL_NEW
#define SIMPLEKERNEL_NEW

#include "stddef.h"

// TODO
namespace std {
enum class align_val_t : size_t {};
};

void *operator new(size_t size);

void *operator new(size_t, void *p) throw();

void *operator new[](size_t size);

void *operator new[](size_t, void *p) throw();

void operator delete(void *p);

void operator delete(void *p, size_t size);

void operator delete(void *, void *) throw();

void operator delete[](void *p);

void operator delete[](void *p, size_t size);

void operator delete[](void *, void *) throw();

void *operator new(size_t, std::align_val_t);
void  operator delete(void *, std::align_val_t);
void *operator new[](size_t, std::align_val_t);
void  operator delete[](void *, std::align_val_t);
void  operator delete(void *, size_t, std::align_val_t);
void  operator delete[](void *, size_t, std::align_val_t);

#endif /* SIMPLEKERNEL_NEW */
